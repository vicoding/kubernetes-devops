#!/bin/bash

INSTALL_ROOT=$(dirname "${BASH_SOURCE}")
PREPARE_STATUS_LOG=$INSTALL_ROOT/report/prepare-status.log
PREPARE_REPORT_LOG=$INSTALL_ROOT/report/prepare-report.log
INSTALL_STATUS_LOG=$INSTALL_ROOT/report/install-status.log
INSTALL_REPORT_LOG=$INSTALL_ROOT/report/install-report.log
FINAL_REPORT_LOG=$INSTALL_ROOT/report/final-report.log

function prepare_failure_handler() {
  local nodeIP=$1
  local role=$2
  echo -n "$nodeIP " >> $PREPARE_STATUS_LOG
  echo -n "$role " >> $PREPARE_STATUS_LOG
  echo ${FUNCNAME[1]}-FAILED >> $PREPARE_STATUS_LOG
}

function prepare_success_handler() {
  local nodeIP=$1
  local role=$2
  echo -n "$nodeIP " >> $PREPARE_STATUS_LOG
  echo -n "$role " >> $PREPARE_STATUS_LOG
  echo ${FUNCNAME[1]}-SUCCESSFUL >> $PREPARE_STATUS_LOG
}

function prepare_failure_report() {
  rc=$(grep FAILED $PREPARE_STATUS_LOG > $PREPARE_REPORT_LOG)
}

function check_prepare_report() {
  local nodeIP=$1 
  if [ x"$(grep $nodeIP $PREPARE_REPORT_LOG)" == "x" ]; then
    return 0
  else
    return 1
  fi
}

function install_failure_handler() {
  local nodeIP=$1
  local role=$2
  echo -n "$nodeIP " >> $INSTALL_STATUS_LOG
  echo -n "$role " >> $INSTALL_STATUS_LOG
  echo ${FUNCNAME[1]}-FAILED >> $INSTALL_STATUS_LOG
}

function install_failure_handler_advanced() {
  local nodes=$*
  for node in $nodes; do
    echo -n "$node " >> $INSTALL_STATUS_LOG
    echo ${FUNCNAME[1]}-FAILED >> $INSTALL_STATUS_LOG
  done
}

function install_failure_report() {
  rc=$(grep FAILED $INSTALL_STATUS_LOG > $INSTALL_REPORT_LOG)
}

function generate_report() {
  if [ ! x"$(grep FAILED $INSTALL_REPORT_LOG)" == "x" ]; then
    join $PREPARE_STATUS_LOG $INSTALL_REPORT_LOG | cut -d ' ' -f 1-3,5 > $FINAL_REPORT_LOG
    while read report; do
      echo "<<HYPERVISION INSTALLER ERROR: $report>>"
    done < $FINAL_REPORT_LOG
  fi
}

function clean_report() {
  now=`date '+%Y-%m-%d-%H:%M:%S'`
  backup_dir=$INSTALL_ROOT/report/backup-$now
  mkdir -p $backup_dir
  cp $PREPARE_STATUS_LOG $PREPARE_REPORT_LOG $INSTALL_STATUS_LOG $INSTALL_REPORT_LOG $FINAL_REPORT_LOG $backup_dir

  > $PREPARE_STATUS_LOG
  > $PREPARE_REPORT_LOG
  > $INSTALL_STATUS_LOG
  > $INSTALL_REPORT_LOG
  > $FINAL_REPORT_LOG
}
